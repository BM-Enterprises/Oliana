[package]
name = "hello-ai-game"
version = "0.1.0"
edition = "2021"

# This described the default way to find & compile src/main.rs, but
# we specify it manually here b/c it'll be easier to extent to a src/web_app.rs or src/for_phones.rs
# and compile an entirely different platform target from the same (or mostly the same) code.
[[bin]]
name = "hello-ai-game"
path = "src/main.rs"


[features]
# To build with ort's "cuda" feature, compile with `cargo build --features cuda --release`
# Host needs CUDA dev tools installed
cuda = ["ort/cuda"]
# To build with ort's "openvino" feature, compile with `cargo build --features openvino --release`
# Host needs intel-oneapi-mkl / Intel MKL dev tools installed
openvino = ["ort/openvino"]
# To build with ort's "coreml" feature, compile with `cargo build --features coreml --release`
# Host needs to be an Apple machine to use Apple's CoreML accelerators.
coreml = ["ort/coreml"]


[dependencies]
# Runtime/hardware/OS control dependencies
tokio =       { version = "1.41", features = ["full"] }
num_cpus =    { version = "1.16" }
serde =       { version = "1", features = ["derive"] }
clap =        { version = "4", features = ["derive"] }
ort =         { version = "1.16", features = [ "download-binaries", "copy-dylibs", "fetch-models", "load-dynamic" ] }


# HTTP/file format dependencies
downloader = { version = "0.2" }
image =      { version = "0.24" }


# This block specified dependencies ONLY compiled in on linux
[target.'cfg(target_os = "linux")'.dependencies]
# Graphics dependencies
bevy =       { version = "0.14", features = ["wayland"] }

# This block specified dependencies ONLY compiled in on macos
[target.'cfg(target_os = "macos")'.dependencies]
# Graphics dependencies
bevy =       { version = "0.14", features = [ ] }

# This block specified dependencies ONLY compiled in on windows
[target.'cfg(windows)'.dependencies]
# Graphics dependencies
bevy =       { version = "0.14", features = [ ] }

